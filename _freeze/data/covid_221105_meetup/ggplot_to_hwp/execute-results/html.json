{
  "hash": "4efcb1e82a1c6b852c04263ede0d7b80",
  "result": {
    "markdown": "---\ntitle: \"ggplot으로 만든 plot hwp에 붙이기\"\nlang: kr\nauthor: \"장명헌\"\ndate: \"2022-11-05\"\nformat: \n  html:\n    code-fold: show\nmainfont: NanumGothic\n---\n\n\n# 공통\n## library + 한글 출력 설정\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(openxlsx)\nlibrary(RColorBrewer)\nlibrary(showtext)\nlibrary(cowplot)\n\n# showtext setting\nfont_add(\"NanumBarunGothic\", \"NanumBarunGothic.ttf\") # 구글폰트도 사용 가능\nshowtext_opts(dpi = 300) # default dpi = 92라 해상도에 문제 발생\nshowtext_auto()\n```\n:::\n\n\n## 사용자 함수 작성\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 날짜 서식 함수\nmy_scale_date <- function(breaks = date_breaks) {\n  scale_x_date(\n    labels = function(z) {\n      strftime(z, \"%y.%m.\") %>%\n        gsub(\"\\\\.0\", \"\\\\.\", .) %>%\n        paste0(\"'\", .)\n    },\n    breaks = breaks,\n    expand = c(0.01, 0.01) # 축과 값 간의 간격 조정\n  )\n}\n\n# 그림 저장 함수\n# - 한글에 붙일 수 있도록 높이, 길이, dpi 조정\n# - pipe로 사용\n\nmyf_ggsave <- function(plot = ., path, w = 16, h = 6) {\n  plot %>%\n    ggsave(path, plot = ., width = w, height = h, units = \"cm\", dpi = 300)\n}\n\n# excel 반올림 함수\nround_xl <- janitor::round_half_up\n```\n:::\n\n\n# 일자별, 누적 확진자 그래프\n\n## 데이터 세팅\n\ncorona board github 자료 활용 [link](https://github.com/jooeungen/coronaboard_kr)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorona <- read.csv(\"./source/kr_regional_daily.csv\") %>%\n  mutate(date = ymd(date), region = factor(\n    region,\n    c(\n      \"서울\", \"부산\", \"대구\", \"인천\", \"광주\", \"대전\", \"울산\", \"세종\",\n      \"경기\", \"강원\", \"충북\", \"충남\", \"전북\", \"전남\", \"경북\", \"경남\", \"제주\", \"검역\"\n    )\n  ))\n\ncorona_plot <- corona %>%\n  arrange(region, date) %>%\n  mutate(daily = confirmed - lag(confirmed)) %>% # 누계가 기본값, 일별 확진자 계산\n  group_by(date) %>%\n  summarise(daily = sum(daily), cum_sum = sum(confirmed))\n\ndate_breaks <- seq(ymd(\"2020-01-01\"), ymd(\"2022-10-19\"), by = \"3 month\")\n```\n:::\n\n\n## 그래프 그리기\n\n### ggplot theme 지정\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_theme <- theme_bw() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 20),\n    text = element_text(size = 12),\n    panel.border = element_blank(),\n    axis.line = element_line(size = 0.3),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    strip.text.x = element_text(size = 10),\n    strip.background = element_blank(),\n    legend.title = element_blank(),\n    legend.margin = NULL,\n    legend.position = c(0.1, 0.3),\n    legend.spacing = unit(-0.1, units = \"cm\"),\n    legend.background = element_blank(),\n    legend.text = element_text(size = 10)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n```\n:::\n:::\n\n\n### 1번 그래프\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(corona_plot, aes(x = date)) +\n  geom_col(aes(y = daily, fill = \"일별 확진\")) +\n  geom_line(aes(y = cum_sum / 25, color = \"누적 확진\")) +\n  my_scale_date() +\n  scale_y_continuous(\n    labels = function(z) {\n      paste0(z / 10000, \"만\")\n    }, expand = c(0.01, 1),\n    sec.axis = sec_axis(~ . * 3, label = function(z) {\n      paste0(z / 10000, \"만\")\n    })\n  ) +\n  scale_fill_manual(values = c(\"일별 확진\" = \"skyblue\")) +\n  scale_color_manual(values = c(\"누적 확진\" = \"darkblue\")) +\n  my_theme +\n  guides(\n    fill = guide_legend(keywidth = 0.3, keyheight = 0.3, default.unit = \"cm\"),\n    color = guide_legend(keywidth = 0.3, keyheight = 0.3, default.unit = \"cm\")\n  )\n\np1 <- p1 +\n  annotate(\"segment\",\n    x = ymd(\"2020-03-01\"), xend = ymd(\"2021-12-31\"),\n    y = 500000, yend = 500000,\n    color = \"darkgreen\",\n    arrow = arrow(ends = \"both\", length = unit(0.3, \"cm\"))\n  ) +\n  geom_text(aes(x = ymd(\"2021-01-30\"), y = 500000),\n    label = \"코로나19 대응부서 근무기간\\n(20.3.1.~21.12.31.)\",\n    color = \"darkgreen\"\n  ) +\n  annotate(\"rect\",\n    xmin = ymd(\"2022-01-01\"), xmax = ymd(\"2022-10-19\"),\n    ymin = -Inf, ymax = Inf,\n    alpha = 0.75\n  )\n```\n:::\n\n\n### 2번 그래프\n\n\n::: {.cell}\n\n```{.r .cell-code}\np2 <- ggplot(\n  data = corona_plot %>% filter(date <= ymd(\"2021-12-31\")),\n  aes(x = date)\n) +\n  geom_col(aes(y = daily, fill = \"일별 확진\")) +\n  geom_line(aes(y = cum_sum / 50, color = \"누적 확진\")) +\n  my_scale_date(\n    c(seq(ymd(\"2020-01-01\"), ymd(\"2021-12-31\"), by = \"3 month\"), \n    ymd(\"2021-12-31\"))\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 10000, 5000),\n    labels = function(z) {\n      paste0(z / 10000, \"만\")\n    }, expand = c(0.01, 1),\n    sec.axis = sec_axis(~ . * 3, label = function(z) {\n      paste0(z / 10000, \"만\")\n    })\n  ) +\n  scale_fill_manual(values = c(\"일별 확진\" = \"skyblue\")) +\n  scale_color_manual(values = c(\"누적 확진\" = \"darkblue\")) +\n  my_theme +\n  theme(legend.position = \"none\") +\n  guides(\n    fill = guide_legend(keywidth = 0.3, keyheight = 0.3, default.unit = \"cm\"),\n    color = guide_legend(keywidth = 0.3, keyheight = 0.3, default.unit = \"cm\")\n  )\n```\n:::\n\n\n### 그림 합치기\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot_grid(p1, p2, align = \"hv\", axis = \"lr\", nrow = 2)\n```\n\n::: {.cell-output-display}\n![](ggplot_to_hwp_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n### 그림 저장\n\nggsave의 width와 height에 따라 그림 비율이 달라지므로 유의   \n(html과 png 비율 상이)\n\na4는 210(w) x 297(h) mm 이고, 용지 여백은 통상 좌우 모두 20mm   \n따라서 최대 width는 210 - 40 = 170mm\n\nheight는 그림이 들어갈 위치에 따라 지정\n\nmyf_ggsave의 기본 값은 w = 16, h = 6   \n[사용자 함수 작성] 참조\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(p1, p2, align = \"hv\", axis = \"lr\", nrow = 2) %>% \n  myf_ggsave(\"total.png\")\n```\n:::\n\n\n# 교육통계 그래프\n\n2022년 교육기본통계 공개자료 활용 [link](https://www.moe.go.kr/boardCnts/viewRenew.do?boardID=294&boardSeq=92429&lev=0&searchType=null&statusYN=W&page=1&s=moe&m=020402&opType=N)\n\n## 학교 수\n\n### 데이터 세팅\n\n\n::: {.cell}\n\n```{.r .cell-code}\nschool <- read.xlsx(\"./source/edu_stat.xlsx\", sheet = 1) %>%\n  select(!전체) %>%\n  filter(연도 <= 2010 | 연도 >= 2020) %>%\n  rename_with(~ c(\"연도\", \"유\", \"초\", \"중\", \"고\", \"기타\")) %>%\n  pivot_longer(cols = 유:기타, names_to = \"학교급\", values_to = \"학교수\") %>%\n  group_by(연도) %>%\n  mutate(\n    연도 = as.character(연도),\n    학교급 = factor(학교급, c(\"유\", \"초\", \"중\", \"고\", \"기타\")),\n    누계 = cumsum(학교수),\n    추가 = ifelse(is.na(lag(누계)), 누계 / 2,\n      lag(누계) + (누계 - lag(누계)) / 2\n    )\n  )\n```\n:::\n\n\n### 그래프\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(school, aes(연도, 학교수, fill = fct_rev(학교급))) +\n  geom_col() +\n  geom_text(\n    aes(y = 추가, label = ifelse(\n      학교수 <= 999, 학교수, format(학교수, big.mark = \",\")\n    )),\n    size = 3\n  ) +\n  geom_text(\n    aes(y = 추가, label = ifelse(학교급 == \"기타\", format(누계, big.mark = \",\"), \"\")),\n    size = 3, vjust = -2\n  ) +\n  scale_x_discrete(expand = c(0.08, 0.08)) +\n  scale_y_continuous(labels = function(x) {\n    ifelse(x <= 999, x, format(x, big.mark = \",\"))\n  }, expand = c(0.01, 0.1), limits = c(0, 25000)) +\n  scale_fill_brewer(palette = \"Set2\", labels = c(\"유\", \"초\", \"중\", \"고\", \"기타\")) +\n  theme_bw() +\n  theme(\n    plot.background = element_blank(),\n    panel.background = element_blank(),\n    panel.border = element_blank(),\n    axis.line.y.left = element_line(size = 0.3),\n    axis.line.x.bottom = element_line(size = 0.3),\n    axis.title.x = element_blank(),\n    legend.title = element_blank(),\n    legend.position = \"bottom\",\n    legend.background = element_blank(),\n    legend.margin = margin(0, 0, 0, 0)\n  ) +\n  guides(\n    fill = guide_legend(keywidth = 0.3, keyheight = 0.3, default.unit = \"cm\")\n  )\n```\n:::\n\n\n## 학생 수\n\n### 데이터 세팅\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudent <- read.xlsx(\"./source/edu_stat.xlsx\", sheet = 2) %>%\n  select(!전체) %>%\n  filter(연도 <= 2010 | 연도 >= 2020) %>%\n  rename_with(~ c(\"연도\", \"유\", \"초\", \"중\", \"고\", \"기타\")) %>%\n  pivot_longer(cols = 유:기타, names_to = \"학교급\", values_to = \"학생수\") %>%\n  group_by(연도) %>%\n  mutate(\n    연도 = as.character(연도),\n    학교급 = factor(학교급, c(\"유\", \"초\", \"중\", \"고\", \"기타\")),\n    누계 = cumsum(학생수),\n    추가 = ifelse(is.na(lag(누계)), 누계 / 2,\n      lag(누계) + (누계 - lag(누계)) / 2\n    )\n  )\n```\n:::\n\n\n### 그래프\n\n\n::: {.cell}\n\n```{.r .cell-code}\np2 <- ggplot(student, aes(연도, 학생수, fill = fct_rev(학교급))) +\n  geom_col() +\n  geom_text(\n    aes(y = 추가, label = ifelse(\n      학생수 <= 999,\n      round_xl(학생수 / 10000),\n      format(round_xl(학생수 / 10000), big.mark = \",\")\n    )),\n    nudge_y = ifelse(student$학교급 %in% c(\"유\", \"기타\"), 10, 0),\n    size = 3\n  ) +\n  geom_text(\n    aes(y = 추가, label = ifelse(\n      학교급 == \"기타\", format(round_xl(누계 / 10000), big.mark = \",\"), \"\")\n    ),\n    size = 3, vjust = -2\n  ) +\n  scale_x_discrete(expand = c(0.08, 0.08)) +\n  scale_y_continuous(\n    labels = function(x) {\n      paste0(ifelse(\n        x <= 999 * 10000,\n        x / 10000,\n        format(x / 10000, big.mark = \",\")\n      ), \"만\")\n    }, expand = c(0.01, 0.1),\n    limits = c(0, 12500000)\n  ) +\n  scale_fill_brewer(palette = \"Set2\") +\n  theme_bw() +\n  theme(\n    plot.background = element_blank(),\n    panel.background = element_blank(),\n    panel.border = element_blank(),\n    axis.line.y.left = element_line(size = 0.3),\n    axis.line.x.bottom = element_line(size = 0.3),\n    axis.title.x = element_blank(),\n    legend.position = \"none\"\n  ) +\n  guides(\n    fill = guide_legend(keywidth = 0.3, keyheight = 0.3, default.unit = \"cm\")\n  )\n```\n:::\n\n\n## 그림 합치기\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot_grid(p1, p2, align = \"h\", nrow = 2)\n```\n\n::: {.cell-output-display}\n![](ggplot_to_hwp_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=672}\n:::\n:::\n",
    "supporting": [
      "ggplot_to_hwp_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}